{"version":3,"sources":["components/Card.module.css","views/CityDetail.module.css","App.module.css","components/SearchBar.module.css","components/Nav.module.css","components/Cards.module.css","views/CitiesPage.module.css","components/Card.jsx","components/Cards.jsx","components/SearchBar.jsx","views/CitiesPage.js","views/CityDetail.js","services/fetchCityById.js","components/Nav.js","App.js","services/fetchCoords.js","services/fetchCity.js","index.js"],"names":["module","exports","Card","props","max","min","name","img","primary","onClose","cityId","className","styles","card","to","button","onClick","src","alt","temps","Temp","label","temp","Cards","cities","cards","map","city","id","SearchBar","onSearch","handleOnSearch","input","document","getElementById","value","searchBar","placeholder","autoComplete","onKeyPress","e","key","CitiesPage","data","handleOnClose","citiesContainer","length","CityDetail","React","useState","setCity","useEffect","setData","fetch","process","then","r","json","recurso","undefined","main","ciudad","Math","round","temp_min","temp_max","weather","icon","wind","speed","clouds","all","latitud","coord","lat","longitud","lon","fetchCityById","detail","prop","active","fontWeight","Nav","nav","navLink","activeStyle","exact","App","navigator","geolocation","getCurrentPosition","pos","oldCities","alert","fetchCoords","coords","latitude","longitude","app","fondo","container","path","prevData","filter","fetchCity","component","render","match","history","parseInt","params","style","color","ReactDOM"],"mappings":"oIACAA,EAAOC,QAAU,CAAC,KAAO,mBAAmB,QAAU,sBAAsB,KAAO,mBAAmB,KAAO,mBAAmB,MAAQ,oBAAoB,OAAS,uB,mBCArKD,EAAOC,QAAU,CAAC,KAAO,yBAAyB,OAAS,2BAA2B,KAAO,2B,mBCA7FD,EAAOC,QAAU,CAAC,IAAM,iBAAiB,MAAQ,mBAAmB,UAAY,uBAAuB,gBAAkB,+B,mBCAzHD,EAAOC,QAAU,CAAC,UAAY,6BAA6B,MAAQ,yBAAyB,OAAS,4B,mBCArGD,EAAOC,QAAU,CAAC,IAAM,iBAAiB,QAAU,uB,mBCAnDD,EAAOC,QAAU,CAAC,MAAQ,uB,mBCA1BD,EAAOC,QAAU,CAAC,gBAAkB,sC,4LCIrB,SAASC,EAAKC,GAC3B,IAAQC,EAAkDD,EAAlDC,IAAKC,EAA6CF,EAA7CE,IAAKC,EAAwCH,EAAxCG,KAAMC,EAAkCJ,EAAlCI,IAAKC,EAA6BL,EAA7BK,QAASC,EAAoBN,EAApBM,QAASC,EAAWP,EAAXO,OAG/C,OACE,sBAAKC,UAAS,UAAKC,IAAOC,KAAZ,YAAoBL,EAAUI,IAAOJ,QAAU,IAA7D,UACE,eAAC,IAAD,CAAMM,GAAE,gBAAWJ,GAAUC,UAAWC,IAAON,KAA/C,UACGA,GACCE,GACA,wBAAQG,UAAWC,IAAOG,OAAQC,QAASP,EAA3C,SACE,cAAC,IAAD,SAIN,qBAAKQ,IAAG,2CAAsCV,EAAtC,WAAoDW,IAAI,KAChE,sBAAKP,UAAWC,IAAOO,MAAvB,UACE,cAACC,EAAD,CAAMC,MAAM,MAAMC,KAAMjB,IACxB,cAACe,EAAD,CAAMC,MAAM,MAAMC,KAAMlB,UAMhC,SAASgB,EAAT,GAAgC,IAAhBC,EAAe,EAAfA,MAAOC,EAAQ,EAARA,KACrB,OACE,sBAAKX,UAAWC,IAAOU,KAAvB,UACE,+BAAOD,IACP,iCAAOC,EAAP,a,qBC5BS,SAASC,EAAT,GAAqC,IAApBC,EAAmB,EAAnBA,OAAQf,EAAW,EAAXA,QAItC,OACE,qBAAKE,UAAWC,IAAOa,MAAvB,SACGD,EAAOE,KAAI,SAACC,GAAD,OACV,cAACzB,EAAD,CAEEQ,OAAQiB,EAAKC,GACbxB,IAAKuB,EAAKvB,IACVC,IAAKsB,EAAKtB,IACVC,KAAMqB,EAAKrB,KACXC,IAAKoB,EAAKpB,IACVE,QAAS,kBAAMA,EAAQkB,EAAKC,MANvBD,EAAKC,S,qBCRL,SAASC,EAAT,GAAkC,IAAbC,EAAY,EAAZA,SAE5BC,EAAiB,WACrB,IAAMC,EAAQC,SAASC,eAAe,eACtCJ,EAASE,EAAMG,OACfH,EAAMG,MAAQ,IAEhB,OACE,sBAAKxB,UAAWC,IAAOwB,UAAvB,UACE,uBACEzB,UAAWC,IAAOoB,MAClBJ,GAAG,cACHS,YAAY,wBACZC,aAAa,MACbC,WAAY,SAACC,GACG,UAAVA,EAAEC,KACJV,OAIN,wBAAQpB,UAAWC,IAAOG,OAAQC,QAASe,EAA3C,SACE,cAAC,IAAD,S,qBCGOW,MAtBf,YAAwD,IAAlCC,EAAiC,EAAjCA,KAAMC,EAA2B,EAA3BA,cAAed,EAAY,EAAZA,SACzC,OACE,qCACE,8BACE,cAACD,EAAD,CAAWC,SAAUA,MAEvB,sBAAKnB,UAAWC,IAAOiC,gBAAvB,UACGF,EAAKG,OAAS,GACb,cAAC5C,EAAD,CACEM,SAAO,EACPJ,IAAKuC,EAAKA,EAAKG,OAAS,GAAG1C,IAC3BC,IAAKsC,EAAKA,EAAKG,OAAS,GAAGzC,IAC3BC,KAAMqC,EAAKA,EAAKG,OAAS,GAAGxC,KAC5BC,IAAKoC,EAAKA,EAAKG,OAAS,GAAGvC,MAG/B,cAACgB,EAAD,CAAOC,OAAQmB,EAAMlC,QAASmC,W,qBCYvBG,MA9Bf,YAA6B,IAAPnB,EAAM,EAANA,GACpB,EAAwBoB,IAAMC,WAA9B,mBAAOtB,EAAP,KAAauB,EAAb,KAKA,OAJAF,IAAMG,WAAU,YCJH,SAAuBvB,EAAIwB,GACxCC,MAAM,sDAAD,OACmDzB,EADnD,kBAHQ0B,mCAGR,kBAGFC,MAAK,SAACC,GAAD,OAAOA,EAAEC,UACdF,MAAK,SAACG,GACL,QAAqBC,IAAjBD,EAAQE,KAAoB,CAC9B,IAAMC,EAAS,CACbxD,IAAKyD,KAAKC,MAAML,EAAQE,KAAKI,UAC7B5D,IAAK0D,KAAKC,MAAML,EAAQE,KAAKK,UAC7B1D,IAAKmD,EAAQQ,QAAQ,GAAGC,KACxBvC,GAAI8B,EAAQ9B,GACZwC,KAAMV,EAAQU,KAAKC,MACnB/C,KAAMoC,EAAQE,KAAKtC,KACnBhB,KAAMoD,EAAQpD,KACd4D,QAASR,EAAQQ,QAAQ,GAAGN,KAC5BU,OAAQZ,EAAQY,OAAOC,IACvBC,QAASd,EAAQe,MAAMC,IACvBC,SAAUjB,EAAQe,MAAMG,KAE1BxB,EAAQS,QAERT,EAAQ,SDjBZyB,CAAcjD,EAAIsB,KACjB,CAACtB,EAAIsB,IAGN,sBAAKvC,UAAWC,IAAOe,KAAvB,eACYgC,IAAThC,GAAsB,6CACb,OAATA,GAAiB,sDACjBA,GACC,sBAAKhB,UAAWC,IAAOkE,OAAvB,UACE,sBAAKnE,UAAWC,IAAOmE,KAAvB,UACE,2CACA,+BAAOpD,EAAKrB,UAEd,sBAAKK,UAAWC,IAAOmE,KAAvB,UACE,wDACA,+BAAOpD,EAAKvB,SAEd,sBAAKO,UAAWC,IAAOmE,KAAvB,UACE,wDACA,+BAAOpD,EAAKtB,gB,iBEtBlB2E,EAAS,CACbC,WAAY,KAgBCC,MAbf,WACE,OACE,sBAAKvE,UAAWC,IAAOuE,IAAvB,UACE,cAAC,IAAD,CAASxE,UAAWC,IAAOwE,QAASC,YAAaL,EAAQlE,GAAG,IAAIwE,OAAK,EAArE,kBAGA,cAAC,IAAD,CAAS3E,UAAWC,IAAOwE,QAASC,YAAaL,EAAQlE,GAAG,SAA5D,uBC8CSyE,MAnDf,WACE,MAAwBvC,IAAMC,SAAS,IAAvC,mBAAON,EAAP,KAAaS,EAAb,KAuBA,OARAJ,IAAMG,WAAU,WACVqC,UAAUC,aACZD,UAAUC,YAAYC,oBAAmB,SAACC,ICzBjC,SAAqBjB,EAAKE,EAAKxB,GAC5CC,MAAM,uDAAD,OACoDqB,EADpD,gBAC+DE,EAD/D,kBAHQtB,mCAGR,kBAGFC,MAAK,SAACC,GAAD,OAAOA,EAAEC,UACdF,MAAK,SAACG,GACL,QAAqBC,IAAjBD,EAAQE,KAAoB,CAC9B,IAAMC,EAAS,CACbxD,IAAKyD,KAAKC,MAAML,EAAQE,KAAKI,UAC7B5D,IAAK0D,KAAKC,MAAML,EAAQE,KAAKK,UAC7B1D,IAAKmD,EAAQQ,QAAQ,GAAGC,KACxBvC,GAAI8B,EAAQ9B,GACZwC,KAAMV,EAAQU,KAAKC,MACnB/C,KAAMoC,EAAQE,KAAKtC,KACnBhB,KAAMoD,EAAQpD,KACd4D,QAASR,EAAQQ,QAAQ,GAAGN,KAC5BU,OAAQZ,EAAQY,OAAOC,IACvBC,QAASd,EAAQe,MAAMC,IACvBC,SAAUjB,EAAQe,MAAMG,KAE1BxB,GAAQ,SAACwC,GAAD,4BAAmBA,GAAnB,CAA8B/B,YAEtCgC,MAAM,2BDINC,CAAYH,EAAII,OAAOC,SAAUL,EAAII,OAAOE,UAAW7C,QAG1D,IAGD,sBAAKzC,UAAWC,IAAOsF,IAAvB,UACE,qBAAKvF,UAAWC,IAAOuF,QACvB,sBAAKxF,UAAWC,IAAOwF,UAAvB,UACE,cAAC,IAAD,CAAOC,KAAK,IAAIf,OAAK,EAArB,SACE,cAAC,EAAD,CACE3C,KAAMA,EACNC,cArBV,SAAuBhB,GACrBwB,GAAQ,SAACkD,GACP,OAAOA,EAASC,QAAO,SAAC5E,GAAD,OAAUA,EAAKC,KAAOA,SAoBvCE,SA7BV,SAAkB+B,GACZlB,EAAKG,OAAS,EAChB+C,MAAM,0CEZG,SAAmBhC,EAAQT,GACxCC,MAAM,qDAAD,OACkDQ,EADlD,kBAHQP,mCAGR,kBAGFC,MAAK,SAACC,GAAD,OAAOA,EAAEC,UACdF,MAAK,SAACG,GACL,QAAqBC,IAAjBD,EAAQE,KAAoB,CAC9B,IAAMC,EAAS,CACbxD,IAAKyD,KAAKC,MAAML,EAAQE,KAAKI,UAC7B5D,IAAK0D,KAAKC,MAAML,EAAQE,KAAKK,UAC7B1D,IAAKmD,EAAQQ,QAAQ,GAAGC,KACxBvC,GAAI8B,EAAQ9B,GACZwC,KAAMV,EAAQU,KAAKC,MACnB/C,KAAMoC,EAAQE,KAAKtC,KACnBhB,KAAMoD,EAAQpD,KACd4D,QAASR,EAAQQ,QAAQ,GAAGN,KAC5BU,OAAQZ,EAAQY,OAAOC,IACvBC,QAASd,EAAQe,MAAMC,IACvBC,SAAUjB,EAAQe,MAAMG,KAE1BxB,GAAQ,SAACwC,GAAD,4BAAmBA,GAAnB,CAA8B/B,YAEtCgC,MAAM,2BFRRW,CAAU3C,EAAQT,QA4BhB,cAAC,IAAD,CAAOiD,KAAK,IAAII,UAAWvB,IAC3B,cAAC,IAAD,CACEmB,KAAK,YACLK,OAAQ,YAAyB,IAAtBC,EAAqB,EAArBA,MACH/E,GADwB,EAAdgF,QACLC,SAASF,EAAMG,OAAOlF,KACjC,OAAO,cAAC,EAAD,CAAYA,GAAIA,OAG3B,cAAC,IAAD,CAAOyE,KAAM,SAAb,SACE,oBAAIU,MAAO,CAAEC,MAAO,SAApB,8BG/CVC,IAASP,OACP,cAAC,IAAD,UACG,cAAC,EAAD,MAEHzE,SAASC,eAAe,W","file":"static/js/main.549c1d83.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__NGmj-\",\"primary\":\"Card_primary__16KFQ\",\"name\":\"Card_name__a7XuK\",\"temp\":\"Card_temp__1xYpE\",\"temps\":\"Card_temps__2OfJP\",\"button\":\"Card_button__7uq6v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"city\":\"CityDetail_city__3eoX9\",\"detail\":\"CityDetail_detail__2ilJE\",\"prop\":\"CityDetail_prop__1Q3ai\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__3f5se\",\"fondo\":\"App_fondo__vdi_U\",\"container\":\"App_container__2GSYx\",\"citiesContainer\":\"App_citiesContainer__1vWIm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchBar\":\"SearchBar_searchBar__1cHAp\",\"input\":\"SearchBar_input__3aSQY\",\"button\":\"SearchBar_button__1-ygM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Nav_nav__14tbX\",\"navLink\":\"Nav_navLink__1dvIN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cards\":\"Cards_cards__313Rl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"citiesContainer\":\"CitiesPage_citiesContainer__3yhu5\"};","import React from \"react\";\nimport styles from \"./Card.module.css\";\nimport { IoCloseCircleOutline } from \"react-icons/io5\";\nimport { Link } from \"react-router-dom\";\n\nexport default function Card(props) {\n  const { max, min, name, img, primary, onClose, cityId } = props;\n  // acá va tu código\n\n  return (\n    <div className={`${styles.card} ${primary ? styles.primary : \"\"}`}>\n      <Link to={`/city/${cityId}`} className={styles.name}>\n        {name}\n        {!primary && (\n          <button className={styles.button} onClick={onClose}>\n            <IoCloseCircleOutline />\n          </button>\n        )}\n      </Link>\n      <img src={`http://openweathermap.org/img/wn/${img}@2x.png`} alt=\"\" />\n      <div className={styles.temps}>\n        <Temp label=\"Min\" temp={min} />\n        <Temp label=\"Max\" temp={max} />\n      </div>\n    </div>\n  );\n}\n\nfunction Temp({ label, temp }) {\n  return (\n    <div className={styles.temp}>\n      <span>{label}</span>\n      <span>{temp}°</span>\n    </div>\n  );\n}\n","import React from \"react\";\nimport Card from \"./Card\";\nimport styles from \"./Cards.module.css\";\n\nexport default function Cards({ cities, onClose }) {\n  // acá va tu código\n  // tip, podés usar un map\n\n  return (\n    <div className={styles.cards}>\n      {cities.map((city) => (\n        <Card\n          key={city.id}\n          cityId={city.id}\n          max={city.max}\n          min={city.min}\n          name={city.name}\n          img={city.img}\n          onClose={() => onClose(city.id)}\n        />\n      ))}\n    </div>\n  );\n}\n","import React from \"react\";\nimport styles from \"./SearchBar.module.css\";\nimport { IoAdd } from \"react-icons/io5\";\n\nexport default function SearchBar({ onSearch }) {\n  // acá va tu código\n  const handleOnSearch = () => {\n    const input = document.getElementById(\"searchInput\");\n    onSearch(input.value);\n    input.value = \"\";\n  };\n  return (\n    <div className={styles.searchBar}>\n      <input\n        className={styles.input}\n        id=\"searchInput\"\n        placeholder=\"Agregar una ciudad...\"\n        autoComplete=\"off\"\n        onKeyPress={(e) => {\n          if (e.key === \"Enter\") {\n            handleOnSearch();\n          }\n        }}\n      />\n      <button className={styles.button} onClick={handleOnSearch}>\n        <IoAdd />\n      </button>\n    </div>\n  );\n}\n","import React from \"react\";\r\nimport Card from \"../components/Card.jsx\";\r\nimport Cards from \"../components/Cards.jsx\";\r\nimport SearchBar from \"../components/SearchBar.jsx\";\r\nimport styles from \"./CitiesPage.module.css\";\r\n\r\nfunction CitiesPage({ data, handleOnClose, onSearch }) {\r\n  return (\r\n    <>\r\n      <div>\r\n        <SearchBar onSearch={onSearch} />\r\n      </div>\r\n      <div className={styles.citiesContainer}>\r\n        {data.length > 0 && (\r\n          <Card\r\n            primary\r\n            max={data[data.length - 1].max}\r\n            min={data[data.length - 1].min}\r\n            name={data[data.length - 1].name}\r\n            img={data[data.length - 1].img}\r\n          />\r\n        )}\r\n        <Cards cities={data} onClose={handleOnClose} />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CitiesPage;\r\n","import React from \"react\";\r\nimport fetchCityById from \"../services/fetchCityById\";\r\nimport styles from \"./CityDetail.module.css\";\r\n\r\nfunction CityDetail({ id }) {\r\n  const [city, setCity] = React.useState();\r\n  React.useEffect(() => {\r\n    fetchCityById(id, setCity);\r\n  }, [id, setCity]);\r\n\r\n  return (\r\n    <div className={styles.city}>\r\n      {city === undefined && <h2>Cargando...</h2>}\r\n      {city === null && <h2>Ciudad no encontrada</h2>}\r\n      {city && (\r\n        <div className={styles.detail}>\r\n          <div className={styles.prop}>\r\n            <label>Ciudad</label>\r\n            <span>{city.name}</span>\r\n          </div>\r\n          <div className={styles.prop}>\r\n            <label>Temperatura maxima:</label>\r\n            <span>{city.max}</span>\r\n          </div>\r\n          <div className={styles.prop}>\r\n            <label>Temperatura minima:</label>\r\n            <span>{city.min}</span>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CityDetail;\r\n","const APIKEY = process.env.REACT_APP_APIKEY;\r\n\r\nexport default function fetchCityById(id, setData) {\r\n  fetch(\r\n    `https://api.openweathermap.org/data/2.5/weather?id=${id}&appid=${APIKEY}&units=metric`\r\n  )\r\n    .then((r) => r.json())\r\n    .then((recurso) => {\r\n      if (recurso.main !== undefined) {\r\n        const ciudad = {\r\n          min: Math.round(recurso.main.temp_min),\r\n          max: Math.round(recurso.main.temp_max),\r\n          img: recurso.weather[0].icon,\r\n          id: recurso.id,\r\n          wind: recurso.wind.speed,\r\n          temp: recurso.main.temp,\r\n          name: recurso.name,\r\n          weather: recurso.weather[0].main,\r\n          clouds: recurso.clouds.all,\r\n          latitud: recurso.coord.lat,\r\n          longitud: recurso.coord.lon,\r\n        };\r\n        setData(ciudad);\r\n      } else {\r\n        setData(null);\r\n      }\r\n    });\r\n}\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport styles from \"./Nav.module.css\";\r\n\r\nconst active = {\r\n  fontWeight: 700,\r\n};\r\n\r\nfunction Nav() {\r\n  return (\r\n    <nav className={styles.nav}>\r\n      <NavLink className={styles.navLink} activeStyle={active} to=\"/\" exact>\r\n        Home\r\n      </NavLink>\r\n      <NavLink className={styles.navLink} activeStyle={active} to=\"/about\">\r\n        About\r\n      </NavLink>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Nav;\r\n","import React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport fetchCity from \"./services/fetchCity.js\";\nimport fetchCoords from \"./services/fetchCoords.js\";\nimport styles from \"./App.module.css\";\nimport CitiesPage from \"./views/CitiesPage.js\";\nimport CityDetail from \"./views/CityDetail.js\";\nimport Nav from \"./components/Nav.js\";\n\nfunction App() {\n  const [data, setData] = React.useState([]);\n\n  function onSearch(ciudad) {\n    if (data.length > 3) {\n      alert(\"No puedes agregar más de 4 ciudades\");\n    } else {\n      fetchCity(ciudad, setData);\n    }\n  }\n  function handleOnClose(id) {\n    setData((prevData) => {\n      return prevData.filter((city) => city.id !== id);\n    });\n  }\n\n  React.useEffect(() => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition((pos) => {\n        fetchCoords(pos.coords.latitude, pos.coords.longitude, setData);\n      });\n    }\n  }, []);\n\n  return (\n    <div className={styles.app}>\n      <div className={styles.fondo} />\n      <div className={styles.container}>\n        <Route path=\"/\" exact>\n          <CitiesPage\n            data={data}\n            handleOnClose={handleOnClose}\n            onSearch={onSearch}\n          />\n        </Route>\n        <Route path=\"/\" component={Nav} />\n        <Route\n          path=\"/city/:id\"\n          render={({ match, history }) => {\n            const id = parseInt(match.params.id);\n            return <CityDetail id={id} />;\n          }}\n        />\n        <Route path={\"/about\"}>\n          <h1 style={{ color: \"white\" }}> About </h1>\n        </Route>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const APIKEY = process.env.REACT_APP_APIKEY;\r\n\r\nexport default function fetchCoords(lat, lon, setData) {\r\n  fetch(\r\n    `https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&appid=${APIKEY}&units=metric`\r\n  )\r\n    .then((r) => r.json())\r\n    .then((recurso) => {\r\n      if (recurso.main !== undefined) {\r\n        const ciudad = {\r\n          min: Math.round(recurso.main.temp_min),\r\n          max: Math.round(recurso.main.temp_max),\r\n          img: recurso.weather[0].icon,\r\n          id: recurso.id,\r\n          wind: recurso.wind.speed,\r\n          temp: recurso.main.temp,\r\n          name: recurso.name,\r\n          weather: recurso.weather[0].main,\r\n          clouds: recurso.clouds.all,\r\n          latitud: recurso.coord.lat,\r\n          longitud: recurso.coord.lon,\r\n        };\r\n        setData((oldCities) => [...oldCities, ciudad]);\r\n      } else {\r\n        alert(\"Ciudad no encontrada\");\r\n      }\r\n    });\r\n}\r\n","const APIKEY = process.env.REACT_APP_APIKEY;\r\n\r\nexport default function fetchCity(ciudad, setData) {\r\n  fetch(\r\n    `https://api.openweathermap.org/data/2.5/weather?q=${ciudad}&appid=${APIKEY}&units=metric`\r\n  )\r\n    .then((r) => r.json())\r\n    .then((recurso) => {\r\n      if (recurso.main !== undefined) {\r\n        const ciudad = {\r\n          min: Math.round(recurso.main.temp_min),\r\n          max: Math.round(recurso.main.temp_max),\r\n          img: recurso.weather[0].icon,\r\n          id: recurso.id,\r\n          wind: recurso.wind.speed,\r\n          temp: recurso.main.temp,\r\n          name: recurso.name,\r\n          weather: recurso.weather[0].main,\r\n          clouds: recurso.clouds.all,\r\n          latitud: recurso.coord.lat,\r\n          longitud: recurso.coord.lon,\r\n        };\r\n        setData((oldCities) => [...oldCities, ciudad]);\r\n      } else {\r\n        alert(\"Ciudad no encontrada\");\r\n      }\r\n    });\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {BrowserRouter} from 'react-router-dom/';\n\nReactDOM.render(\n  <BrowserRouter>\n     <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}